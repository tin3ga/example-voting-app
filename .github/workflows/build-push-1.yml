name: Build and Push Containers

on:
  push:
    tags:
       - "**@[0-9]*.[0-9]*.[0-9]*" # vote@1.2.3

permissions:
  actions: write 
  contents: read


jobs:
  build-push-container-images:
    runs-on: ubuntu-24.04
    steps: 
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0
        with:
          fetch-depth: 0

      - name: Check if Github release tag exists
        id: check_tag
        run: |
          echo "Checking if tag $GITHUB_REF exists"

          TAG_NAME="${GITHUB_REF_NAME}"   # e.g. vote@1.2.3
          SERVICE="${TAG_NAME%%@*}"       # e.g. vote
          VERSION="${TAG_NAME##*@}"       # e.g. 1.2.3

          echo "service=${SERVICE}" >> "$GITHUB_OUTPUT"

          if git rev-parse -q --verify "refs/tags/$TAG_NAME" >/dev/null 2>&1
          then
            echo "Tag exists"
            echo "tag_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "Tag does not exist"
            echo "tag_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Exit if tag already exists
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          echo "A release with this tag already exists. Exiting..."
          exit 0

      - name: Install Task
        uses: ./.github/actions/setup-dependencies
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a # v3.11.1

      - name: Login to Docker Hub Registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tag
        id: tag
        working-directory: ${{ steps.check_tag.outputs.service }}
        env:
          SERVICE: ${{ steps.check_tag.outputs.service }}
        shell: bash
        run: |
          version=$(task utils:generate-version -- "$SERVICE") 

          date_tag=$(date +'%Y%m%d')
          full_version="${version}-${date_tag}"

          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "full_version=${full_version}" >> "$GITHUB_OUTPUT"

          echo ${full_version}
          echo ${version}
 
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6.18.0
        with:
          context: ${{ steps.check_tag.outputs.service }}
          push: ${{ !env.ACT }}
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ steps.check_tag.outputs.service }}:${{ steps.tag.outputs.version}}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ steps.check_tag.outputs.service }}:${{ steps.tag.outputs.full_version}}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ steps.check_tag.outputs.service }}:stable
            ${{ vars.DOCKERHUB_USERNAME }}/${{ steps.check_tag.outputs.service }}:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha, mode=max